name: Correct YAML Test

on:
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install packages
      run: pip install requests pandas numpy
    
    - name: Check files exist
      run: |
        echo "Checking if files exist..."
        ls -la scripts/ || echo "No scripts folder"
        ls -la scripts/config/ || echo "No config folder"
        ls -la scripts/core/ || echo "No core folder"
    
    - name: Test config import
      run: |
        cd scripts
        python3 << 'PYTHON_SCRIPT'
import sys
sys.path.append('.')
try:
    from config.etf_config import ETF_INFO
    print('Config import SUCCESS')
    print('ETF count:', len(ETF_INFO))
except Exception as e:
    print('Config import FAILED:', e)
PYTHON_SCRIPT
    
    - name: Test Firebase client
      run: |
        cd scripts
        python3 << 'PYTHON_SCRIPT'
import sys
sys.path.append('.')
try:
    from core.firebase_client import FirebaseClient
    client = FirebaseClient()
    print('Firebase client SUCCESS')
    print('Firebase URL:', client.firebase_url)
except Exception as e:
    print('Firebase client FAILED:', e)
PYTHON_SCRIPT
    
    - name: Test dashboard
      run: |
        cd scripts
        python3 << 'PYTHON_SCRIPT'
import sys
sys.path.append('.')
try:
    from generate_dashboard import ModularDashboard
    dashboard = ModularDashboard()
    print('Dashboard creation SUCCESS')
except Exception as e:
    print('Dashboard creation FAILED:', e)
PYTHON_SCRIPT
    
    - name: Test main analyzer
      run: |
        cd scripts
        python3 << 'PYTHON_SCRIPT'
import sys
sys.path.append('.')
try:
    import main_analyzer
    print('Main analyzer import SUCCESS')
    if hasattr(main_analyzer, 'main'):
        print('Main function found')
    else:
        print('No main function')
except Exception as e:
    print('Main analyzer import FAILED:', e)
PYTHON_SCRIPT
    
    - name: Test Firebase connection
      env:
        FIREBASE_URL: ${{ secrets.FIREBASE_URL }}
      run: |
        cd scripts
        python3 << 'PYTHON_SCRIPT'
import sys
sys.path.append('.')
try:
    from core.firebase_client import FirebaseClient
    client = FirebaseClient()
    test_data = {"test": True, "timestamp": "2025-07-16"}
    success = client.save('test/github_actions', test_data)
    if success:
        print('Firebase save SUCCESS')
    else:
        print('Firebase save FAILED')
    data = client.get('test/github_actions')
    if data:
        print('Firebase get SUCCESS')
    else:
        print('Firebase get FAILED')
except Exception as e:
    print('Firebase test FAILED:', e)
PYTHON_SCRIPT
    
    - name: Final result
      run: |
        echo "=========================================="
        echo "Test completed!"
        echo "Look for SUCCESS/FAILED messages above"
        echo "=========================================="
